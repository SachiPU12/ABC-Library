<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxQREBQSEREWFRUUFhgUEhgVFxUWGBQVFhQXGBQVGRYY
        HCggGBolHxQVITEhJSorLi4wFx8zODMsNygtMCv/2wBDAQoKCg4NDhoQEBosJCAkLCwsLC8sNCwwLCws
        LCwsLCwsLC8sLCwsLCwsLCwsLCwsLCwuLCwsLCwsLCwsLCwsLCz/wAARCADCAQMDAREAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAYHBAUIAwIB/8QAPhAAAQMCAgYGCAYCAQUBAAAAAQACAwQRBSEGBxIx
        UYETIkFhcZEUIzJCUmKSoUNygqKxwTPRsjRTc8LSJP/EABoBAQACAwEAAAAAAAAAAAAAAAADBAECBQb/
        xAA0EQEAAgECBAMHAwMEAwAAAAAAAQIDBBEFEiExMkFRE2FxkbHR8CKBoRRCUjNDweEVI/H/2gAMAwEA
        AhEDEQA/ALxQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBBqcV0m
        pKX/AD1MbD8O0C76Bc/Zazesd5T49NlyeCsyhmLa4qVlxTxSTHsJtGz73d9lDbUVjs6GLg+a3jmI/lDM
        V1tV0txF0cA7Nhu07m55IJ8AFDOotPZ0cfCMFfFvKwtWGm3p8XQzuHpMQ624dKzd0gHHsIHce3Kxhyc0
        bT3cniOi9hbmr4Z/j3J0pnNEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQY9ZWxwt2pZGRt4vcGj7rEzEd2
        1aWvO1Y3RHFdaWHw3DZHTOHZE0kfW6zTyJUVs9IX8XC9RfvG3xQvFdcs7rinpmR8HSOMhtxsNkA+ahtq
        Z8odHHwWkeO2/wAOiGYtpjW1NxNVSEHe1p2G+GyywPNRWy2nvLo4tFgx+GsfX6tESo1oQEGVheIyU0zJ
        oXbL4ztNP8g8QdxHetq2ms7wjy4q5aTS3aXSeh2kseI0zZmZOHVlZfON/aO8HeDwXQpeLxu8fqtNbT5J
        pP7e+G9W6sICAgICAgICAgICAgICAgICAgIPxzrZk2QR7FdOKCmv0lUwkb2xnpHX4WZex8VHbLWO8reL
        Q58nhrP79PqheK65oxcUtK5x7HSkNHjstuT5hRW1MeUOhi4Lef8AUtt8ENxbWZiE+QmELeELQ39xu77q
        G2e8uji4Xp6d43+KJ1NQ+R21I9z3He57i4+ZUUzM91+tK1jasbPJYbCD8QEBAQEG/wBC9J5MOqRK25Ye
        rMz42f8A0L3B/olSY7zSd1TWaWuox8s9/KXSWG18dREyaFwcx42mkcP6I3Edy6ETExvDyF6Wpaa2jrDJ
        WWggICAgICAgICAgICAgICDFrcShhIE00cZd7O29rdq2+1zmsTMR3b1x3t4YmUMxzWtRQEti26hwy9XY
        Mv8Andv8QCobaisduro4eE57xvb9Px7/ACQjFtb9XJcQRxwt42Mj/M5fZQ21Fp7Oli4Nir45mf4hDMTx
        +pqSenqZZL9jnnZ5MHVHIKGb2nvLo49Nix+CsQ1q1TCD0ggdI4MY0uc7JrWgknwAWYjdi1orG8ztCb4L
        qtq5gHTFtO0/F1n/AEN3cyFNXT2nv0cvNxfDTpT9X0TXDNVdFHnKZJj8ztlv0ssfMlT109Y7uZk4vnt4
        do/PekdJoxRxexRwAjcTG1x+pwJUkY6x5KVtXnt3vPzbJtOwbmNHg0LbZBzT6viahieLPiY4cHMaR5EJ
        tDMXtXrEy0mIaC0EwzpWMPGL1Z/bYfZaTipPktY+Iaina8z8eqD4/qlc0F1HNt2/DlsHHweLAnxA8VBb
        Tf4upg4zEztljb3x9lbVtG+GR0crHMe02c1wsQq0xMTtLtUvW9eas7w8Fhun2qzTX0KX0ed3/wCeU5E/
        hSHIO7mnt8+N7GHLyztPZyeJ6L2tfaUj9UfzC+wVdeYfqAgICAgICAgICAgICAgIKF1wuMmIvB/DjjY3
        uFi7+XlUc/jeq4TEf0+3rMoA1QS6desbCMiAgkmhmiEuIydXqQtPrJCL2+Vo952fLt7Ly48c3lR1mtpp
        q9esz2j88l36PaOU9CzZgjANus85vf4u/oZK7SkV7PL6jVZM873n9vJsayrZCwySvaxjc3OcbAc1tMxH
        WUNKWvPLWN5V1jmtqJhLaSEy/O8ljeTbbR52Ve2pjydnBwa9uuSdvdHVD63WViEh6szYxwjjZ/LgT91D
        Oe8ujThWmr3jf4yxGae4gDf0t/NrD9i1Y9tf1STw7Tf4fVusL1r1cdumZHMO3Lo3Hm0W/at66i0d1XLw
        fDbwTMfz+fNY2i2m9NX2YwmOX/tvtc8dk7nfz3KxTLW7jarQZdP1nrHrCTKVSR7THRSLEIS1wDZWj1Ul
        s2n4Txae0KPJji8Lej1l9PfeO3nH55ufa6jfDK+KRuy9ji1wPYR/XeufMTE7S9hS9b1i1e0sdYbLl1Qa
        a9I1tBUO6zRamcfeaB/iPeAMuIy7M7mDLv8Apl53imi5Z9tTtPf7rVVlxBAQEBAQEBAQEBAQEBAQU9rn
        wksqIqoexM0Qv7pGbRZ5tuP0qpqK9d3f4Rm/TOP06/squpZsu8VWd3fad3mVhvIjDOwTDHVVRFAz2pHB
        t+A3udyAJ5LateadkWfLGLHN58nSOE4bHSwsghbZjBYcSe1x4knMrpVrFY2h4rLltlvN7d5ZTjYXJsBm
        TwHFZRufNO9K3185s4iBhIhZuHDbI7XH7DJc/Lk559z1+h0ddPTr4p7/AGRlRL4gIwIPqOQtcHNJa4G7
        SDYgjcQRuKMTETG0uhdAceNdRMlfbpGkxy27XN97uuC0810cV+au7x+v08YM01jt3hI1IpqZ11UDWVcU
        zRYzRkP7zGQAfGxA5BU9TG1ol6XguSbYrUnyn6q7VZ2X1FIWODmktc0hzSMiCDcEHsKy1tWJjaXRGrjT
        EYjT2eQKiIASjdtDskaOB7eB5K/iyc8e95LX6OdPfp4Z7fZL1KoCAgICAgICAgICAgICDUaV4K2tpJac
        5FzbsPwyDNjvO33Wt680bJtPmnDki8eTmyrgPWa8Wewljxwe02cPMLmzGz2eO0Wr07SwGrEpKz02EZTz
        UzAHYiXEexC8t7iS1t/IuHNT6eP1uTxi0xp9vWYXerzy7WaTucKKpLPaEMmz47Bstb+GU+m2nNTftvH1
        czrmPbiAgICAgvzVbhRp8OZtizpnGYjgHWDP2taeav4K8tHkeJ5oyaidu0dPz90uUznqV1z4iJK1kLc+
        hj63c6Q7VvLZ81S1Ft7bPTcGxTXDN585+iv1XdcQZ+A4xJR1DKiE2cw7uxzT7TXcQVtW01neEOfBXNSa
        WdK6M49FXUzKiE5Oyc072PHtMPePuLFdGlotG8PHajBbBeaWbVbIRAQEBAQEBAQEBAQEBBSut/Aegq21
        TB6upyk4NmaN/wCofdpVPPTad/V6LhOo5qeznvHb4f8AStKlmy66ru1M/wBzzKw3lL9VWItgxJm2Q1sj
        HxkkgAZbQJJ72Ac1NgttdzeK4pyaedvKYn/j/lbeIab0EPt1TCeEd5D+wFW5y0jzeex6DUX7Un9+n1Rj
        FdbFLsuZFBLLcEdbZjBBFjnmR5KK2or5Qu4uDZt4m1oj+VOKm9IIyICAglOrzRn06qAePUxWfMePws8X
        EeQKlxU5re5Q4hq/YYunint9/wBnQAC6DyDCxrE2UtPJPJ7MbSbfEfdaO8mw5rW1orG8pcOK2W8Ur5ub
        MSrXTzSTSG7pHF7vEnd4Dcubad53e1x44x0ile0MZYbiAgk+gGlrsOqQ43MMlmzt7r5PHzNufHMKXFk5
        J9yjr9HGop08Udvs6NpalsrGyRuDmPAc1wzBBFwQr8Tu8jas1mYnu9VlgQEBAQEBAQEBAQEBBptL8DFd
        Ry05yLheM/DI3Nh8xY9xK0vXmrsn02acOWLw5tqYjYteLPaS14O8OabEFc6Xs8dotHTtLBbwWJb19BGR
        AQEBAQEH6xhcQALkmwA3kncEYmYiN5dGaFaPiho2RWG2evMeMhGYvwG4eC6OOnLXZ4zW6mc+WbeXl8G9
        UiqpvXBpJ0swo4z1ITeW3vS/D4NB8yeCp6i+88sPScI0vLT21u89vh/2rlVnaEBARgQWVqk019HeKKod
        6mQ+pcT/AInn3STuY77E95VnBl2/TLi8U0PPHtad47+9d6uPOCAgICAgICAgICAgICCkdb2A+j1gqWD1
        dTk/umaM/qFj4gqnnptO70fCdRzU9nPev0VxUss66ruzM/3PgrDeX4jAgICAgIJPq2oBNicAcLhhMpH5
        BtN/dsqXDG94UOJZOTT228+nzdCLoPIMevqOjhkk37DHP+lpP9LEztG7fHXmtFfWdnMFRM6R7nvN3PcX
        OPEuNyfMrmTO73NaxWIiPJ5rDYQEBAQEYXlqm019KjFJUO9fGPVuO+WMf+zR5jPiruHLzRtPd5jieh9l
        b2lPDP8AErHVhyRAQEBAQEBAQEBAQEGj0zwIV1FLBltEbURPuyNzYe7ge4laXrzV2WNLnnDli/z+Dm+e
        M2LXCzmktcDvDm5EFc6Xs6Wi0dO0sJvBYlvX0EBAQEBAQSnVjWiLE4LmweXRX73tIb97DmpcM7Xhz+J4
        +fTW28uvydBLoPIviaMOa5p3OBafAixRmJ2neHMuO4Y6lqZYHjONxaL+82/Vd4EWPNcy1eWdnt8GWMuO
        Lx5sFaphAQEBAQe1HVPikbJG4tewhzHDeCNxWYmYneGl6VvWa2jeJdHaB6VsxGmD8hMyzZ2cHfEB8J7O
        Y7F0MeSLw8hrNJbT5NvLylJVIpiAgICAgICAgICAgIKN1t4B6NWioY20VVcutuEw9r6sj4lyp56bTv6v
        ScK1PPj5J71+ivKlljdVnZn/ACfBRtL8RgQEBAQfcMpY4OabOaQ5p4EG4KyxaImNpdIaJ442upI5222i
        NmUD3ZB7Q/sdxC6OO/NXd4rVaecGWaT+3wbSonbG0ue5rWjeXENA5lbzOyCtZtO0RupnWziNFUvjkppg
        +ZvUk2AdhzMyDt2sSDll2HuCpZ7VnrHd6ThWLPjia3javePir5V3ZEBAQEBAQbfRbSCSgqWzxHdlI3sk
        YT1mnyyPYQCt6Xms7wrarTVz45pb9vdLpTBMWjq4GTwuux4v3tPa08CDkV0a2i0bw8dlxWxXmlu8M5ZR
        iAgICAgICAgICAg0Om+AivopYMtu23ET2SNzb55jwJWmSvNXZZ0mecOWL/P4Ob5GEghws5pIcDvBGRuu
        dL2VJiYYjeCxLavoIyICAgICDb4DpLU0QkFNLsdJbaya7MbiA4EA7xdb1yWr2Vs+kxZ5ickb7MPEcTmq
        HbU8r5D87ibeA3DksTaZ7pceGmONqREMRapCyMCMiAgICAgIJlq20yOHz7EhJp5SOkG/YduEgH2I7R4B
        TYcnJO09nN4jovb05q+KP59zoWN4cA5pBBFwRmCDuIKvvJzGz6QEBAQEBAQEBAQEBBROtrAfRa7p2C0V
        Vdx4NlFtsc7h3N3BUs9Nrb+r03CtRz4+Se9fogFSyxuq/udef8nwVhs/FlgQEBAQEEz0e1bVVUxkpdHF
        E8BzXOdtEtO4hrb35kKemC1urmajiuHFM1jeZhP8G1XUcNjLtTu+c7LPob/ZKnrgrHfq5Gbi2e/Sv6Y9
        3dutIdFYamjdTNjZH70Ra0NDHj2TYDdvB7iVvfHFq7K2n1mTFljJMzPr74c81tI+GR8UjS17CWuB7CFz
        5iYnaXsKXresWr2l4rDcQEBAQEBBa+qDTXZLaCodkTamcewn8Ingfd8uCtYMv9suBxXQ/wC9SPj9/uuJ
        W3AEBAQEBAQEBAQEBBH9O8AFfQyQgdcdeE8JG5gc8281pkpzV2WdJnnBli/l5/Bzg5pLbEWIyIO8EcVz
        pezpMSxmcFiWa9Oj8KNhGBAQEBBamp3SffQyu4vpyfN8f8uH6la0+T+2XA4xpP8Aer+/3/4WurbgCCrt
        cmjzC1tawta8WZK0kAyN3NcB2kbj3W4KrqKf3O7wfU239jPby9ypVUehEBAQEBAQbvANF6qre0QRkXN2
        vcdhotntbX+rqSmO1u0Keo1uDFvF7ftHV0hgkMrKeJlQ8SStaBI9t7OI7c+1dCsTt1eRyzSbzNI2jyZy
        yjEBAQEBAQEBAQEBBQ2tfAfRK7pmC0VVd/c2X8Qc7h36jwVLPTa2/q9PwrUe0xck96/RA6lljdQOtb/J
        8u4rDZ8owICAgIPWlqHRvbIw7LmODmkdjgbgrMTt1a2rFqzWe0rjGtimbTscWPfOWjpI2izWv7eucrE5
        5X3q5/UV297zf/hss5JiJiK+UohjWtGsmyh2advyAOd9bh/AChtqLT26Ojh4Rgp4/wBU/wAIXVVL5XF8
        j3Pcd7nEuJ5lQzMz3dOlK0jasbQ8lhsICAgy6HDJZzaKNz/AZDxO4LatbW7Qiy58WKN72iEqwzV9I6xn
        kDB8LOs7z3D7qeumn+6XJzcapHTFXf3yl2F6MU0GbIgXfE/rH75DkrFcVa9ocjPr8+bpa3T0jpCY6Mxj
        pHHg3LmVIppKgICAgICAgICAgICAgjesDR/06hkiAvI31kP/AJGg2H6hdvNR5Kc1dlrR6j2GWLeXn8HO
        hF22IzGRvvBC58vZUmJY8fa1CvTo/CFq3fiywICAgICAgICD0ggc87LGlxO4NBJ8gsxEz2YtetI3tO0e
        9JcM0GqJbGS0Tfmzd9I/shTV09p79HLzcXwU6U/VP8JbhmhNNFm4GV3z+z9Iy87qxXBSPe5OfiuoydIn
        lj3fdJIoQ0WaAANwAAHkFM5szMzvLGxDE4YBeaVrO4nM+Dd5Wtr1r3lNi0+TLO1KzLTxaQz1R2cOo5Je
        zpHjZjHfe9vMgqL2s28EL8cPx4uuovEe6OspLotonWMqWVVZVjaYHBsMI6lnCxDiRnuB3HcM1tWl997S
        hz6jT8k48NP3nunalc8QEBAQEBAQEBAQEBAQUFrVwH0OvMjBaKpvIOAkv6xvmQ79XcqOem1t/V6jheo9
        pi5Z71+nkg9Q2xuoIdW3qPzzRmOrzQEBAQEBAQbzDNFKmexEew0+8/qjy3nyUtcN7KObiWnxdObefSPz
        ZLcM0AibnO8yHgOq3/Z+ysV01Y79XIzcZy26Y45f5lKqKgjhGzFG1g+UAX8T2qeKxHZysmW+Sd7zM/F7
        yyNY0ue4NaN5JAHmUmdmtazadohH6rTCHa6OmY+pkOQbGDYnxtmO8AqKc8dq9XRx8MyzHNkmKx72VTaP
        YrW/5HMoYz2DrSEcjf7tWu2S3fo359Fg8MTeflH580kwXVtRQHbka6ok7XTnaF/yez53W9cNY690GXiW
        a8ctZ5Y9I6JfHGGgNaAAMgALADuAUqjM7930jAgICAgICAgICAgICAgIIzrD0e9OoZI2i8jPWQ/naPZ/
        ULt5qPJTmrst6LUewyxby7S51HWb3jeudL2VZ3eMXa0rLEdJ2fLgtW78WWBAQbDDsFnnPqonOHxWs36j
        ktq47W7Qr5tXhw+O0fDzSzC9XxyNRLb5Y/7cf9KxXTf5S5OfjXlir+8/ZLcMwGCn/wAUQB+I9Z31FWK4
        617Q5GbV5s3jtv8ARsrLdXajE9JqanuHShzhlss67r8DbIc1HbLWvmt4dBny9a16es9IY1LNiVd/0lJ0
        EZ3Sz5cwCM+Qco+fJbwxt8Vv+m0mD/VvzT6V/Ps3VBqva9wkxCpkqXfCCWMH9+VlmMO/W07tLcTmkcuC
        kVj5ym+F4TDTM2KeFkbflAF/E7zzU0ViOzn5Mt8k73ndmrKMQEBAQEBAQEBAQEBAQEBAQEBBz/rSwH0P
        EC9otFU3kZbsdl0reTjteD1Rz05bb+r1PC9R7TFyz3r+QhVQ2xuFBDqW7bjsxcIzEvulpHyu2Y2OeeDQ
        SsxWZ7NMmSmON7zER70nwzQOZ9jM4Rjh7TvIZDzU9dNae7l5+M4q9Mcc0/KPuluF6IU0Oex0juMlnftt
        b7KxXDSrkZ+JajL57R6R0/7b9rLZAWUqgxq/EYoBeaRrPE5nwG8rW1or3S4sGTLO1ImWjZpPLUuLMOpJ
        J3btsghgPfw5kKL20z4I3dCOG1xxvqLxX3ef5820pdAa2qzr6zomH8KD+Cd3/JY9ne3in5H9ZpsP+hTe
        fW359kvwLQqio7GKnaXj8SQB778QT7PKykrjrXtCnm1ufN4rdPSOyQqRVEBAQEBAQEBAQEBAQEBAQEBA
        QEBAQRbWRo96dQPY0Xlj9bD3ubvb+oXHMKPLTmrsuaHUexzRae3aXP2H0zp3siZm552R3Dtce4C/kqFa
        zadoesy564sc3t2TrCdA4mZzPMvdbYb9jc+at109Y79Xn83GMto2xxy/zKV0tIyNuzGxrRwaAP4U8REd
        nKve153tO8vSR4aC5xDQN5JAA5lJnZiKzadoR+t0yga7YgDqiQ5BsYNieG1bPkCorZ6x0jq6GLhmW0c1
        /wBMessilwTFq32tmiiPHOQjw3/8Vr/7Le5LvosHreflH580hwXVhSQkPn2qqTeXSk7JPadgHPtycXLa
        uCsdZ6osvFM1o5afpj0j7ppBC1jQ1jQ1o3BoAA8AFM50zMzvL0RgQEBAQEBAQEBAQEBAQEBAQEBAQEBA
        QEBBTWMYCKHHNq1oqlr3xHcBISOkZ4g3Pg4Kvy8uTf1dec05tHy+ddt/h6s3ENKKWC4dKHOGWzH1zfhl
        kOZUlsta95VcOgz5fDXp6z0Y1NV4jW5UdGYmH8WfqjxF8jy2lHz3t4Y+a1/S6XB1zX3n0r+fZuaDVd0p
        D8Sq3zu37DCWsB4XIvbfuDVn2O/jndi3Eoxxy6ekV9/n+fNOMIwSnpW7NPAyMduyMz4u3nmVLWsV7Odl
        zZMs73tMtgtkQgICAgICAgICAgICAgICAgICAgICAgICAgICDUaTaOw18PRTg5HaY5ps+Nw95pWtqxaN
        pTYM98N+av8A9Y2jmh1JQsAihaXdsjwHSE/mtkO4WCxXHWvZJn1mXNP6p6ekdkgW6qICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg//2Q==
</value>
  </data>
</root>